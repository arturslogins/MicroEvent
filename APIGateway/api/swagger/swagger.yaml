swagger: "2.0"
info:
  version: "0.0.1"
  title: API Gateway
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/plain
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /ka:
    # binds a127 app logic to a route
    x-swagger-router-controller: keep_alive
    get:
      description: If all is fine it returns OK
      # used as the method name of the controller
      operationId: keepAlive
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/KeepAlive_Response"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Standard_ErrorResponse"
  /stuff:
    x-swagger-router-controller: stuff
    get:
      description: Get suff. Example of async business logic handling
      operationId: getStuff
      responses:
        "202":
          description: Success. Return empty response with header pointing at the location of the result when he async operation completes.
          headers:
            Location:
              type: string
              description: Relative path to the async operation result.
        default:
          description: Error
          schema:
            $ref: "#/definitions/Standard_ErrorResponse"
  /stuff/{stuffId}:
    x-swagger-router-controller: stuff
    get:
      description: Get suff by id. Example of async business logic handling
      parameters:
        - in: path
          name: stuffId
          type: string
          required: true
          description: GUID of the resource to get.
      operationId: getStuffById
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetStuffById_Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Standard_ErrorResponse"
  /userbehaviour:
    x-swagger-router-controller: business_data
    get:
      description: Get businessdata
      operationId: getUserBehaviourStatistics
      responses:
        "202":
          description: Success. Return empty response with header pointing at the location of the result when he async operation completes.
          headers:
            Location:
              type: string
              description: Relative path to the async operation result.
        default:
          description: Error
          schema:
            $ref: "#/definitions/Standard_ErrorResponse"
  /userbehaviour/{userbehaviourId}:
    x-swagger-router-controller: business_data
    get:
      description: Get BusinessData by id. Example of async business logic handling
      parameters:
        - in: path
          name: userbehaviourId
          type: string
          required: true
          description: GUID of the resource to get.
      operationId: getUserBehaviourStatisticsById
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserBehaviourStatisticsById_Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Standard_ErrorResponse"
  /logs/{pageNumber}:
    x-swagger-router-controller: logs
    get:
      description: Get logs
      parameters:
        - in: path
          name: pageNumber
          type: integer
          required: true
          description: Number of the page of logs requested.
      operationId: getLogsByPage
      responses:
        "202":
          description: Success. Return empty response with header pointing at the location of the result when he async operation completes.
          headers:
            Location:
              type: string
              description: Relative path to the async operation result.
        default:
          description: Error
          schema:
            $ref: "#/definitions/Standard_ErrorResponse"
  /logs/{pageNumber}/{logRequestId}:
    x-swagger-router-controller: logs
    get:
      description: Get logs by id. Example of async business logic handling
      parameters:
        - in: path
          name: pageNumber
          type: integer
          required: true
          description: Number of the page of logs requested.
        - in: path
          name: logRequestId
          type: string
          required: true
          description: GUID of the resource to get.
      operationId: getLogsPageById
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetLogsPageById_Response"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Standard_ErrorResponse"
# complex objects have schema definitions
definitions:
  # Keep Alive
  KeepAlive_Response:
    required:
      - status
    properties:
      status:
        type: string
  # Stuff sample
  GetStuffById_Response:
    required:
      - stuff
    properties:
      stuff:
        type: string
  # BusinessData
  GetUserBehaviourStatisticsById_Response:
    required:
      - overallErrors
      - governmentStats
      - nationalNewsStats
      - taxSystemStats
    properties:
      overallErrors:
        $ref: "#/definitions/Statistic_Object"
      governmentStats:
        $ref: "#/definitions/Statistic_Object"
      nationalNewsStats:
        $ref: "#/definitions/Statistic_Object"
      taxSystemStats:
        $ref: "#/definitions/Statistic_Object"
  Statistic_Object:
    required:
      - labels
      - data
    properties:
      labels:
        type: array
        items:
          type: string
      data:
        type: array
        items:
          type: integer
  # Logs
  GetLogsPageById_Response:
    required:
      - logs
    properties:
      logs:
        type: array
        items:
          $ref: "#/definitions/Log_Object"
  Log_Object:
    required:
      - id
      - logLevel
      - timestamp
      - location
      - contents
    properties:
      id:
        type: string
      logLevel:
        type: string
      timestamp:
        type: string
        format: date-time
      location:
        type: string
      contents:
        type: string
  # Shared definitions
  Standard_ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
